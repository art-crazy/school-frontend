name: Build and Deploy School Frontend

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Verify build files
        run: ls -la dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: school-frontend-build
          path: dist/
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: school-frontend-build
          path: dist/

      - name: Setup SSH environment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Verify SSH connection
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
          "echo 'SSH connection successful'"

      - name: Clean remote directory
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
          "rm -rf /var/www/school-frontend/*"

      - name: Deploy files using rsync
        uses: burnett01/rsync-deployments@5.2.3
        with:
          switches: -avz --chown=arzhannikov:arzhannikov --chmod=755
          path: dist/
          remote_path: /var/www/school-frontend/
          remote_host: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          delete: true
          recursive: true

      - name: Verify deployment
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
          "ls -la /var/www/school-frontend"
