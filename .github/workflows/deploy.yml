name: Build and Deploy School Frontend

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Show build files
        run: ls -la dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: school-frontend-build
          path: dist/
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: school-frontend-build
          path: dist/

      - name: Debug environment variables
        run: |
          echo "SERVER_IP=${{ secrets.SERVER_IP }}"
          echo "SSH_USER=${{ secrets.SSH_USER }}"
          echo "Build directory:"
          ls -la dist/

      - name: Check if SSH key exists
        run: |
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "SSH_PRIVATE_KEY is missing!"
            exit 1
          else
            echo "SSH_PRIVATE_KEY is set."
          fi

      - name: Verify SSH connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          ssh-keyscan -t rsa ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "echo 'SSH connection successful!'"

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/*"
          target: "/var/www/school-frontend"
          strip_components: 1
